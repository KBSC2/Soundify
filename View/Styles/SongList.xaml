<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dataContext="clr-namespace:View.DataContexts"
                    xmlns:components="clr-namespace:View.Components"
                    x:Class="View.Resources.SongContextMenuInfo">
    <DataTemplate x:Key="SongList">
        <DataTemplate.Resources>
            <components:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
        </DataTemplate.Resources>
        <ListView x:Name="SongListView"
                  Background="Transparent" BorderThickness="0" BorderBrush="{x:Null}"
                  ItemsSource="{Binding SongInfoList}" FontSize="16"
                  DataContext="{x:Static dataContext:SongListDataContext.Instance}">
            <ListView.View>
                <GridView  ColumnHeaderContainerStyle="{StaticResource myHeaderStyle}">
                    <GridViewColumn Header="Title" Width="300" DisplayMemberBinding="{Binding Song.Name}" />
                    <GridViewColumn Header="Artist" Width="300" DisplayMemberBinding="{Binding Artist.ArtistName}" />
                    <GridViewColumn Header="Duration" Width="150" DisplayMemberBinding="{Binding Duration}" />
                    <GridViewColumn Width="150" DisplayMemberBinding="{Binding Added}">
	                    <GridViewColumnHeader Content="Added" Visibility="{Binding IsPlaylistScreen, Converter={StaticResource BooleanToVisibilityConverter}}"
	                                          components:GridViewBehaviours.CollapseableColumn="True"/>
                    </GridViewColumn>
                    <GridViewColumn Width="150">
                        <GridViewColumnHeader Content="Edit" Visibility="{Binding IsSongListScreen, Converter={StaticResource BooleanToVisibilityConverter}}"
                                              components:GridViewBehaviours.CollapseableColumn="True"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate >
                                <Button x:Name ="EditSong" Content="Edit Song" Foreground="White" Background="{DynamicResource Orange}" Click="ListViewItem_ButtonClick_EditSong"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.Resources>
                <CollectionViewSource x:Key="AllPlaylists" Source="{Binding AllPlaylists}" />
                <ContextMenu x:Key="ItemContextMenu" x:Name="ItemContextMenu">
                    <MenuItem Header="Add song to queue" Click="ListViewItem_RightClickAddQueue"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />
                    <MenuItem Header="Song information" Click="ListViewItem_RightClickSongInfo"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}" />
                    <MenuItem Name="DeleteSongFromPlaylist" Header="Remove song"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"
                              Click="ListViewItem_RightClick_DeleteSong"
                              Visibility="{Binding IsPlaylistScreen, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <MenuItem Header="Add to Playlist"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}">
                        <MenuItem.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Source={StaticResource AllPlaylists }}" />
                            </CompositeCollection>
                        </MenuItem.ItemsSource>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <EventSetter Event="PreviewMouseDown" Handler="MenuItem_LeftClick" />
                                <Setter Property="Tag"
                                        Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}}" />
                                <Setter Property="MenuItem.Header" Value="{Binding Name}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <EventSetter Event="MouseDoubleClick" Handler="SongRow_Click" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{Binding Playing}" />
                    <Setter Property="ContextMenu" Value="{DynamicResource ItemContextMenu}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FF8390E4" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </DataTemplate>
</ResourceDictionary>